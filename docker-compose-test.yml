version: '2.1'

services:

  postgres:
    container_name: postgres
    build: ./services/db
    healthcheck:
      test: exit 0
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin

  users-service:
    container_name: users-service
    build: ./services/users/
    volumes:
      - './services/users:/src/app'
      - './services/users/package.json:/src/package.json'
    ports:
      - '3000:3000'
    environment:
      - DATABASE_URL=postgres://admin:admin@postgres:5432/node_docker_api_dev
      - DATABASE_URL_TEST=postgres://admin:admin@postgres:5432/node_docker_api_test
      - NODE_ENV=test
      - TOKEN_SECRET=changeme
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres

  locations-service:
    container_name: locations-service
    build: ./services/locations/
    volumes:
      - './services/locations:/src/app'
      - './services/locations/package.json:/src/package.json'
    ports:
      - '3001:3001'
    environment:
      - DATABASE_URL=postgres://admin:admin@postgres:5432/node_docker_api_dev
      - DATABASE_URL_TEST=postgres://admin:admin@postgres:5432/node_docker_api_test
      - NODE_ENV=test
      - TOKEN_SECRET=changeme
    depends_on:
      postgres:
        condition: service_healthy
      users-service:
        condition: service_started
    links:
      - postgres
      - users-service

  web:
    container_name: web
    build: ./web/
    volumes:
      - './web:/src/app'
      - './web/package.json:/src/package.json'
    ports:
      - '3003:3003'
    environment:
      - NODE_ENV=test
      - SECRET_KEY=changeme
    depends_on:
      postgres:
        condition: service_healthy
      users-service:
        condition: service_started
      locations-service:
        condition: service_started
    links:
      - postgres
      - users-service
      - locations-service
